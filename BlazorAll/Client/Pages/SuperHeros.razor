@page "/superheroes"
@inject ISuperHerohttpService sp

<PageTitle>Super Heroes</PageTitle>

<h3>SuperHeros</h3>

<AuthorizeView Roles="Admin">
    <NotAuthorized>
        <span>
            this is not authorized view
        </span>
    </NotAuthorized>
    <Authorized>
            <span>this is secret view .User is : @context.User.Identity.Name</span>
            
    </Authorized>
</AuthorizeView>

<br />
@if(!listhero.Any())
{
    <span>Loading...</span>

}
else
{
        <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Family</th>
                <th>SuperHero</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var list in listhero)
            {
                <tr>
                    <td>@list.Id</td>
                    <td>@list.FirstName</td>
                    <td>@list.LastName</td>
                    <td>@list.HeroName</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
    <div class="col">
        <Pagination MetaData="metadata" Spread="5" SelectedPage="SelectedPage" />
    </div>
</div>
}

@code {
    public List<SuperHero> listhero { get; set; } = new List<SuperHero>();
    public MetaData metadata { get; set; } = new MetaData();
    private SuperHeroParametes _sp = new SuperHeroParametes();


    protected override async Task OnInitializedAsync()
    {

        await GetInfos();

    }

        private async Task SelectedPage(int page)
    {
        _sp.PageNumber = page;
        await GetInfos();

    }


        private async Task GetInfos()
    {

        var response = await sp.GetSuperHeros(_sp);

        listhero = response.Items;
        metadata = response.MetaData;
    }
}
